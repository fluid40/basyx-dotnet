name: Build and push Docker image

on:
  push:
    branches:
      - '**'

jobs:
  test-admin-shell-client-server:
    runs-on: ubuntu-latest
    name: Test Admin Shell Client Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: |
          dotnet test basyx-dotnet-tests/AdminShellClientServerTests/AdminShellClientServerTests.csproj --verbosity normal
  
  test-admin-shell-repo-client-server:
    runs-on: ubuntu-latest
    name: Test Admin Shell Repo Client Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: |
          dotnet test basyx-dotnet-tests/AdminShellRepoClientServerTests/AdminShellRepoClientServerTests.csproj --verbosity normal

  test-registry-client-server:
    runs-on: ubuntu-latest
    name: Test Registry Client Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: |
          dotnet test basyx-dotnet-tests/RegistryClientServerTests/RegistryClientServerTests.csproj --verbosity normal          

  test-repo-client-server:
    runs-on: ubuntu-latest
    name: Test Repository Client Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: |
          dotnet test basyx-dotnet-tests/RepoClientServerTests/RepoClientServerTests.csproj --verbosity normal 

  test-submodel-client-server:
    runs-on: ubuntu-latest
    name: Test Submodel Client Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: |
          dotnet test basyx-dotnet-tests/SubmodelClientServerTests/SubmodelClientServerTests.csproj --verbosity normal 

  test-submodel-repo-client-server:
    runs-on: ubuntu-latest
    name: Test Submodel Repo Client Server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: |
          dotnet test basyx-dotnet-tests/SubmodelRepoClientServerTests/SubmodelRepoClientServerTests.csproj --verbosity normal

  build-image:
    if: github.ref == 'dk/update-pipeline'
    runs-on: ubuntu-latest
    name: Build docker image
    needs: [test-admin-shell-client-server, test-admin-shell-repo-client-server, test-registry-client-server, test-submodel-client-server, test-submodel-repo-client-server, test-repo-client-server]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate version number
        id: version
        run: |
          MAJOR=${VERSION_MAJOR}
          MINOR=${VERSION_MINOR}
          PATCH=${VERSION_PATCH}
          echo "Current version $MAJOR.$MINOR.$PATCH"

          # update patch number
          PATCH=$((PATCH + 1))

          VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version $VERSION"

          GIT_HASH=$(git rev-parse --short HEAD)
          echo "Git Hash: $GIT_HASH"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "patch=$PATCH" >> $GITHUB_OUTPUT
          echo "hash=$GIT_HASH" >> $GITHUB_OUTPUT
          
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push fluid-basyx-dotnet-repo-server image
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile.Repo.Server
          push: true
          tags: engineeringmethodsag/fluid-basyx-dotnet-repo-server:latest

      - name: Build and push fluid-basyx-dotnet-aas-sm-server image
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile.AASX.SM.Server
          push: true
          tags: engineeringmethodsag/fluid-basyx-dotnet-aas-sm-server:latest